name: CI
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
permissions:
    contents: write

jobs:
    test:
        name: "🧪 Run tests"
        timeout-minutes: 10
        runs-on: ubuntu-latest
        env:
            PGUSER: casekit
            PGPASSWORD: password
            PGDATABASE: orm
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: ${{ env.PGUSER }}
                    POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
                    POSTGRES_DB: ${{ env.PGDATABASE }}
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci-setup

            - name: Run tests
              run: pnpm test:coverage

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v5.0.7
              if: ${{ github.actor != 'dependabot[bot]' }}
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: casekit/orm

    typecheck:
        name: "📐 Typecheck"
        timeout-minutes: 10
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci-setup
            - name: Typecheck
              run: pnpm typecheck

    lint:
        name: "🧹 Run eslint"
        timeout-minutes: 10
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci-setup
            - name: Lint
              run: pnpm lint

    prettier:
        name: "💅 Run prettier"
        timeout-minutes: 10
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/ci-setup
            - name: Prettier
              run: pnpm prettier

    publish:
        name: "🔥 Publish"
        needs: [test, typecheck, lint, prettier]
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        steps:
            - uses: actions/checkout@v4
            - name: Set up Git config
              run: |
                  git config user.name "$(git log -n 1 --pretty=format:%an)"
                  git config user.email "$(git log -n 1 --pretty=format:%ae)"
            - uses: ./.github/actions/ci-setup
            - name: Build
              run: pnpm build
            - name: Version
              run: pnpm version prerelease --preid=alpha
            - name: Publish
              run: pnpm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Push
              run: git push
            - name: Push tag
              run: git push --tags

    dependabot:
        name: "🤖 Dependabot"
        needs: [test, typecheck, lint, prettier]
        runs-on: ubuntu-latest
        if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
        steps:
            - name: Fetch Dependabot metadata
              id: dependabot-metadata
              uses: dependabot/fetch-metadata@v2
              with:
                  alert-lookup: true
                  github-token: ${{ secrets.DEPENDABOT_METADATA_PAT }}
            - name: Enable auto-merge for Dependabot Security Updates
              run: gh pr merge --auto --squash "$PR_URL"
              env:
                  PR_URL: ${{ github.event.pull_request.html_url }}
                  GITHUB_TOKEN: ${{ secrets.DEPENDABOT_MERGE_PAT }}
              if: ${{ steps.dependabot-metadata.outputs.cvss != 0 }}
